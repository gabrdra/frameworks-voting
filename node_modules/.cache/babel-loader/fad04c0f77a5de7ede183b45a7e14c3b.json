{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/Frameworks/frameworks-voting/src/VotingCard.js\";\nimport React from 'react';\nimport Booth from './Booth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VotingCard(args) {\n  const options = args.votes.map(vote => vote.option);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: args.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Booth, {\n      options: options,\n      onVote: onVote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n\n  function onVote(key) {\n    args.votes.forEach(vote => {\n      if (vote.option === key) {\n        console.log(vote.count);\n        vote.count++;\n        console.log(vote.count);\n      }\n    });\n    console.log(args.votes[0].count);\n  }\n}\n_c = VotingCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"VotingCard\");\nVotingCard.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"VotingCard\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/VotingCard.js\"] = {\n    name: \"VotingCard\",\n    docgenInfo: VotingCard.__docgenInfo,\n    path: \"src/VotingCard.js\"\n  };\n}","map":{"version":3,"sources":["/home/gabriel/Frameworks/frameworks-voting/src/VotingCard.js"],"names":["React","Booth","VotingCard","args","options","votes","map","vote","option","title","onVote","key","forEach","console","log","count"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,eAAe,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACrC,QAAMC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAeC,IAAI,IAAKA,IAAI,CAACC,MAA7B,CAAhB;AACA,sBACI;AAAA,4BACI;AAAA,gBAAKL,IAAI,CAACM;AAAV;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAIL,OAAlB;AAA2B,MAAA,MAAM,EAAIM;AAArC;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAMA,WAASA,MAAT,CAAgBC,GAAhB,EAAoB;AAChBR,IAAAA,IAAI,CAACE,KAAL,CAAWO,OAAX,CAAmBL,IAAI,IAAI;AACvB,UAAGA,IAAI,CAACC,MAAL,KAAgBG,GAAnB,EAAuB;AACnBE,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACQ,KAAjB;AACAR,QAAAA,IAAI,CAACQ,KAAL;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACQ,KAAjB;AACH;AACJ,KAND;AAOAF,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAI,CAACE,KAAL,CAAW,CAAX,EAAcU,KAA1B;AACH;AACJ;KAlBuBb,U","sourcesContent":["import React from 'react';\r\nimport Booth from './Booth';\r\n\r\nexport default function VotingCard(args) {\r\n    const options = args.votes.map(vote => (vote.option));\r\n    return (\r\n        <div>\r\n            <h3>{args.title}</h3>\r\n            <Booth options = {options} onVote = {onVote}/>\r\n        </div>\r\n    );\r\n    function onVote(key){\r\n        args.votes.forEach(vote => {\r\n            if(vote.option === key){\r\n                console.log(vote.count);\r\n                vote.count++;\r\n                console.log(vote.count);\r\n            }\r\n        });\r\n        console.log(args.votes[0].count)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}